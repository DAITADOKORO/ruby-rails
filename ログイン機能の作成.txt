ログイン機能の作成


deviseでユーザテーブルを自動的に作成する。

Gemfile 最終行
	gem 'devise'

bundle install

rails g devise:install

rails g devise モデル名
（devise独自のルール。これによりモデルとテーブル用のマイグレーションファイルを作成）

作成したマイグレーションファイルにて
	## Trackable　以下のコメントアウト状態を解除（＃消す）
	名前を保存するカラム　t.string :name　の追加(timestampsの上あたりに)

rails db:migrate

(ここまででsign-in,sign-up画面自体が生成)





rails g devise:views
	deviseの様々な機能と関連付けられたviewが作られる。

以下、view作成

app/views/devise/registrations/new.html.erbにサインアップ画面

例）
<div class="form-body">

<%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
        <%= devise_error_messages! %>
    <div class="form-group has-icon">
        <label class="control-label sr-only" for="inputName">Name</label>
        <%= f.text_field :name, autofocus: true, class:"form-control", id:"inputName", placeholder:"名前"%>
        <span class="fa fa-user form-control-icon" aria-hidden="true"></span>
    </div>
    <div class="form-group has-icon">
        <label class="control-label sr-only" for="inputEmail">Email</label>
        <%= f.email_field :email, class:"form-control", id:"inputEmail", placeholder:"メールアドレス"%>
        <span class="fa fa-envelope form-control-icon" aria-hidden="true"></span>
    </div>
    <div class="form-group has-icon">
        <label class="control-label sr-only" for="inputPassword">Password</label>
        <%= f.password_field :password, autocomplete: "off", class:"form-control", id:"inputPassword", placeholder:"パスワード" %>
        <span class="fa fa-lock form-control-icon" aria-hidden="true"></span>
    </div>
    <div class="form-group has-icon">
        <label class="control-label sr-only" for="inputConfirmPassword">Password</label>
        <%= f.password_field :password_confirmation, autocomplete: "off", class:"form-control", id:"inputConfirmPassword", placeholder:"パスワード確認" %>
         <span class="fa fa-check-circle-o form-control-icon" aria-hidden="true"></span>
    </div>
        <%= f.submit "新規登録", class:"btn btn-lg btn-block btn-base-1 mt-20" %>
    <% end %>
</div>




初期設定で用意されていないカラム（nameなど）を追加する場合、コントローラを修正する。
ただし、deviseのコントローラはライブラリで用意されていて直接修正できない。そのため、application_controllerに記述する。

class ApplicationController < ActionController::Base

  before_action :configure_permitted_parameters, if: :devise_controller?
  protected
  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
  end
end

ユーザ登録やログイン認証が使われる場合、その前にconfigure_permitted_parametersが実行される。

devise_parameter_sanitizer.permitでnameのデータ操作を許可するアクションメソッドが指定されている。
今回はユーザ登録の際にユーザ名のデータ操作が許可される。
要はstrong parametersと一緒。ただし、protectedはprivateほど頑固ではなく、ほかのコントローラからも参照できる。

