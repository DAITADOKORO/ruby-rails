form_forの基本形



<%= form_for(@list, url: '/todolists') do |f| %>
    <h4>タイトル</h4>
    <%= f.text_field :title %>
    <h4>本文</h4>
    <%= f.text_area :body %>
    <%= f.submit '保存' %>
<% end %>


<%= form_for(インスタンス) do |f| %>
<% end %>

が基本形。

<%= form_for(@list, url:"/todolists/#{@list.id}") do |f| %>
といった形も。

空のモデルが必要なので、コントローラで
@list = List.new　として関連付けよう。


form_forでエラー文を出す。


<%= form_for(@post_image) do |f| %>
 
    <% if @post_image.errors.any? %>
        <%= @post_image.errors.count %>件のエラーが発生しました
        <% @post_image.errors.full_messages.each do |message| %>
            <%= message %>
        <% end %>
    <% end %>
 
    <%= f.attachment_field :image %>
    <%= f.text_field :shop_name %>
    <%= f.text_area :caption %>
    <%= f.submit %>
<% end %>


errorsはバリデーション時に発生したエラー内容を確認できる。
any?と組み合わせることでエラー発生の判定ができる。
full_messageと組み合わせることでエラーの内容を出力できる（エラー文は配列で保存されているため、eachを使用）

実例）

<%= form_for(@post_image, url: post_images_path) do |f| %>
  <% if @post_image.errors.any? %>
    <div id="error_explanation">
      <h2><%= @post_image.errors.count %>件のエラーが発生しました。</h2>
      <ul>
      <% @post_image.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

 <div class="row">
    <div class="col-sm-12">
      <%= f.attachment_field :image %> # refile使用上のルール
    </div>
  </div>
  <br>
  <div class="row">
    <div class="col-sm-6">
      <div class="form-group has-icon">
        <label class="control-label sr-only">ショップ名</label>
        <%= f.text_field :shop_name, class:"form-control", placeholder:"ショップ名" %>
        <span class="fa fa-building form-control-icon" aria-hidden="true"></span>
      </div>
    </div>
    <div class="col-sm-6">
    </div>
  </div>
  <div class="row">
    <div class="col-sm-12">
      <%= f.text_area :caption, class:"form-control", rows:"3", placeholder:"コメントここに" %>
    </div>
  </div>
  <hr>
  <%= f.submit "送信", class:"btn btn-lg btn-block btn-base-1 mt-20" %>
<% end %>

このとき、モデルは,

app/models/post_image.rbにて

class PostImage < ApplicationRecord
  belongs_to :user
  attachment :image # ここを追加（_idは含めません）
end



二か所以上のインスタンスから変数を引っ張ってきたい場合

<%= form_for [@post_image, @post_comment] do |f| %>

コントローラも当然、
def show
    @post_image = PostImage.find(params[:id])
    @post_comment = PostComment.new
end
と個別になる。